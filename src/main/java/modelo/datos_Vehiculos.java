/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package modelo;
import controlador.Usuario;
import controlador.Vehiculo;
import java.awt.HeadlessException;
import java.awt.event.ItemEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
/**
 *
 * @author Lenovo 2024
 */
public class datos_Vehiculos extends javax.swing.JFrame {
    private HashMap<String, Integer> TiposMap;
    private HashMap<String, Integer> MarcasMap;
    /**
     * Creates new form DatosVehiculos
     */
    public datos_Vehiculos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        nombres = new javax.swing.JLabel();
        text_Placa = new textField.TextField();
        jLabel1 = new javax.swing.JLabel();
        text_Propietario = new textField.TextField();
        direccion = new javax.swing.JLabel();
        telefono = new javax.swing.JLabel();
        text_Anio = new textField.TextField();
        jLabel2 = new javax.swing.JLabel();
        text_Capacidad = new textField.TextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        comboMarca = new combo_suggestion.ComboBoxSuggestion();
        comboModelos = new combo_suggestion.ComboBoxSuggestion();
        jSeparator1 = new javax.swing.JSeparator();
        comboTipo = new combo_suggestion.ComboBoxSuggestion();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setForeground(new java.awt.Color(0, 153, 153));
        jPanel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        nombres.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        nombres.setText("Placa:");

        text_Placa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_PlacaActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Cedula Propietario:");

        text_Propietario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_PropietarioActionPerformed(evt);
            }
        });

        direccion.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        direccion.setText("Modelo:");

        telefono.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        telefono.setText("Año:");

        text_Anio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_AnioActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Color:");

        text_Capacidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_CapacidadActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Tipo Vehiculo:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Marca:");

        btnGuardar.setBackground(new java.awt.Color(0, 102, 204));
        btnGuardar.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardar.setText("Guardar");
        btnGuardar.setBorder(null);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnModificar.setBackground(new java.awt.Color(0, 102, 204));
        btnModificar.setForeground(new java.awt.Color(255, 255, 255));
        btnModificar.setText("Modificar");
        btnModificar.setBorder(null);
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(204, 255, 255));
        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Datos Vehículo");

        comboMarca.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboMarcaActionPerformed(evt);
            }
        });

        comboModelos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jSeparator1.setForeground(new java.awt.Color(255, 102, 0));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        comboTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTipoActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 102, 204));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(comboTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(nombres)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(text_Placa, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(telefono)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(text_Anio))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(text_Capacidad, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(comboModelos, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(text_Propietario, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addComponent(comboMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(direccion))
                .addContainerGap(32, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(187, 187, 187))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(comboTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(24, 24, 24)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nombres)
                                    .addComponent(text_Placa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(29, 29, 29)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(text_Capacidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(text_Propietario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(direccion)
                                .addGap(18, 18, 18)
                                .addComponent(comboModelos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(79, 79, 79))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(text_Anio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(telefono))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(65, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboMarcaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboMarcaActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        String tipoVehiculo = (String) comboTipo.getSelectedItem();
        String placa = text_Placa.getText().trim();
        String cedulaPropietario = text_Propietario.getText().trim();
        String marca = (String) comboMarca.getSelectedItem();
        String modelos = (String) comboModelos.getSelectedItem();
        String anio = text_Anio.getText().trim();
        String color = text_Capacidad.getText().trim();

        if (tipoVehiculo.isEmpty() || placa.isEmpty() || cedulaPropietario.isEmpty() || marca.isEmpty() || modelos.isEmpty() || anio.isEmpty() || color.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Todos los campos deben estar llenos", "Error de Validación", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Validar que la matrícula contenga solo letras y/o números y tenga un máximo de 6 caracteres
        if (!placa.matches("[a-zA-Z0-9]{1,7}")) {
            JOptionPane.showMessageDialog(this, "La matrícula debe contener solo letras y/o números y tener como máximo 6 caracteres", "Error de Validación", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Validar que la cédula del propietario tenga un máximo de 10 caracteres
        if (cedulaPropietario.length() > 10) {
            JOptionPane.showMessageDialog(this, "La cédula del propietario debe tener como máximo 10 caracteres", "Error de Validación", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
            int anioV;
    try {
        anioV = Integer.parseInt(anio);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "La cédula debe ser un número válido", "Error de Validación", JOptionPane.ERROR_MESSAGE);
        return;
    }

        Vehiculo vehi = new Vehiculo();
        int result = 0;
        try {
            result = vehi.Vehiculo3(cedulaPropietario, tipoVehiculo, placa, marca, modelos, anioV, color, true);
            if (result == 0) {
                JOptionPane.showMessageDialog(this, "Error al modificar el vehiculo", "Mensaje del sistema", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Se modifico correctamente");
                comboTipo.setSelectedIndex(0);
                text_Placa.setText("");
                text_Propietario.setText("");
                comboMarca.setSelectedIndex(0);
                comboModelos.setSelectedIndex(0);
                text_Anio.setText("");
                text_Capacidad.setText("");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e, "Error de SQL", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                vehi.desconectar();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, e, "Error al cerrar recursos", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        String tipoVehiculo = (String) comboTipo.getSelectedItem();
        String placa = text_Placa.getText().trim();
        String cedulaPropietario = text_Propietario.getText().trim();
        String marca = (String) comboMarca.getSelectedItem();
        String modelos = (String) comboModelos.getSelectedItem();
        String anio = text_Anio.getText().trim();
        String color = text_Capacidad.getText().trim();

        if (tipoVehiculo.isEmpty() || placa.isEmpty() || cedulaPropietario.isEmpty() || marca.isEmpty() || modelos.isEmpty() || anio.isEmpty() || color.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Todos los campos deben estar llenos", "Error de Validación", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Validar que la matrícula contenga solo letras y/o números y tenga un máximo de 6 caracteres
        if (!placa.matches("[a-zA-Z0-9]{1,7}")) {
            JOptionPane.showMessageDialog(this, "La matrícula debe contener solo letras y/o números y tener como máximo 6 caracteres", "Error de Validación", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Validar que la cédula del propietario tenga un máximo de 10 caracteres
        if (cedulaPropietario.length() > 10) {
            JOptionPane.showMessageDialog(this, "La cédula del propietario debe tener como máximo 10 caracteres", "Error de Validación", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
            int anioV;
    try {
        anioV = Integer.parseInt(anio);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "La cédula debe ser un número válido", "Error de Validación", JOptionPane.ERROR_MESSAGE);
        return;
    }

        Vehiculo vehi = new Vehiculo();
        int result = 0;
        try {
            result = vehi.Vehiculo1(cedulaPropietario, tipoVehiculo, placa, marca, modelos, anioV, color);
            if (result == 0) {
                JOptionPane.showMessageDialog(this, "Error al ingresar el vehiculo", "Mensaje del sistema", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Se ingreso correctamente");
                comboTipo.setSelectedIndex(0);
                text_Placa.setText("");
                text_Propietario.setText("");
                comboMarca.setSelectedIndex(0);
                comboModelos.setSelectedIndex(0);
                text_Anio.setText("");
                text_Capacidad.setText("");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e, "Error de SQL", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                vehi.desconectar();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, e, "Error al cerrar recursos", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void text_CapacidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_CapacidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_CapacidadActionPerformed

    private void text_AnioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_AnioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_AnioActionPerformed

    private void text_PropietarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_PropietarioActionPerformed

    }//GEN-LAST:event_text_PropietarioActionPerformed

    private void text_PlacaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_PlacaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_PlacaActionPerformed

    private void comboTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboTipoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    String cedula = text_Propietario.getText().trim();
    Usuario usu = new Usuario();
    
    try {
        // Llamar al método que ejecuta el procedimiento almacenado
        ResultSet rs = usu.verificarUsuario(cedula);

        // Mostrar el resultado en función de la respuesta del procedimiento almacenado
        if (rs.next()) {
                String resultado = rs.getString("resultado"); // 'resultado' es la columna devuelta por el SP

                if ("existe".equals(resultado)) {
                JOptionPane.showMessageDialog(this, "La cédula " + resultado + "", "Mensaje del sistema", JOptionPane.INFORMATION_MESSAGE);
                } else {
                JOptionPane.showMessageDialog(this, "La cédula " + resultado + "", "Mensaje del sistema", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
        try {
            usu.desconectar();
        } catch (Exception e) {
        
        JOptionPane.showMessageDialog(this, e, "Error al cerrar recursos", JOptionPane.ERROR_MESSAGE);
    }}
    }//GEN-LAST:event_jButton1ActionPerformed
int tipo = 0;


public void cargarVTipos() {
    Vehiculo ne = new Vehiculo();
    TiposMap = new HashMap<>();
    
    try (ResultSet rs = ne.CatalogoV(tipo)) {
        comboTipo.removeAllItems();
        TiposMap.clear();
        
        while (rs.next()) {
            int catId = rs.getInt("cat_id");
            String tipo = rs.getString("cat_detalle");
            comboTipo.addItem(tipo);
            TiposMap.put(tipo, catId);
        }
        
        comboTipo.addItemListener((ItemEvent e) -> {
            if (e.getStateChange() == ItemEvent.SELECTED) {
                cargarVMarca();
            }
        });
        
        // Load brands by default
        cargarVMarca();
        
    } catch (SQLException e) {
        e.printStackTrace(); // Handle error
    }
}

public void cargarVMarca() {
    Vehiculo ne = new Vehiculo();
    MarcasMap = new HashMap<>();
    String tipoSeleccionada = (String) comboTipo.getSelectedItem();
    
    // Verificar si tipoSeleccionada está en el mapa
    if (tipoSeleccionada == null || !TiposMap.containsKey(tipoSeleccionada)) {
        return; // Salir del método si el tipo no es válido
    }
    
    Integer catId = TiposMap.get(tipoSeleccionada); // Puede devolver null si la clave no está presente
    
    if (catId == null) {
        System.out.println("No se encontró ID para el tipo seleccionado.");
        return; // Salir del método si catId es nulo
    }
    
    try (ResultSet rs = ne.CatalogoV(catId)) {
        comboMarca.removeAllItems();
        MarcasMap.clear();
        
        while (rs.next()) {
            int idmarca = rs.getInt("cat_id");
            String marca = rs.getString("cat_detalle");
            comboMarca.addItem(marca);
            MarcasMap.put(marca, idmarca);
        }
        
        comboMarca.addItemListener((ItemEvent e) -> {
            if (e.getStateChange() == ItemEvent.SELECTED) {
                cargarVModelos();
            }
        });
        
        // Cargar modelos por defecto
        cargarVModelos();
        
    } catch (SQLException e) {
        e.printStackTrace(); // Manejar errores
    }
}

public void cargarVModelos() {
    Vehiculo ne = new Vehiculo();
    String marcaSeleccionada = (String) comboMarca.getSelectedItem();
    
    // Verificar si marcaSeleccionada está en el mapa
    if (marcaSeleccionada == null || !MarcasMap.containsKey(marcaSeleccionada)) {
        return; // Salir del método si la marca no es válida
    }
    
    Integer idmarca = MarcasMap.get(marcaSeleccionada); // Puede devolver null si la clave no está presente
    
    if (idmarca == null) {
        System.out.println("No se encontró ID para la marca seleccionada.");
        return; // Salir del método si idmarca es nulo
    }
    
    try (ResultSet rs = ne.CatalogoV(idmarca)) {
        comboModelos.removeAllItems();
        
        while (rs.next()) {
            String modelo = rs.getString("cat_detalle");
            comboModelos.addItem(modelo);
        }
        
    } catch (SQLException e) {
        e.printStackTrace(); // Manejar errores
    }
}


    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(datos_Vehiculos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(datos_Vehiculos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(datos_Vehiculos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(datos_Vehiculos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new datos_Vehiculos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JComboBox<String> comboMarca;
    private javax.swing.JComboBox<String> comboModelos;
    private javax.swing.JComboBox<String> comboTipo;
    private javax.swing.JLabel direccion;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel nombres;
    private javax.swing.JLabel telefono;
    private javax.swing.JTextField text_Anio;
    private javax.swing.JTextField text_Capacidad;
    private javax.swing.JTextField text_Placa;
    private javax.swing.JTextField text_Propietario;
    // End of variables declaration//GEN-END:variables
}
